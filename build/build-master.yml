stages:
- stage: BuildNuget
  jobs:
  - job: BuildNugetWindows
    pool:
        name: Hosted VS2017
        demands: msbuild

    steps:
    - script: echo Building!

    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: '4.3.1'

    - task: NuGetCommand@2
      displayName: 'Nuget Restore MobCAT'
      inputs:
        command: 'restore'
        restoreSolution: 'MobCAT/MobCAT.csproj'
        feedsToUse: 'select'

    - task: NuGetCommand@2
      displayName: 'NuGet restore MobCAT.Forms'
      inputs:
        restoreSolution: 'MobCAT.Forms/MobCAT.Forms.csproj'

    - task: NuGetCommand@2
      displayName: 'NuGet restore MobCAT.Droid'
      inputs:
        restoreSolution: 'MobCAT.Droid/MobCAT.Droid.csproj'

    - task: MSBuild@1
      displayName: 'Build MobCAT'
      inputs:
        solution: 'MobCAT/MobCAT.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build MobCAT.Forms'
      inputs:
        solution: 'MobCAT.Forms/MobCAT.Forms.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build MobCAT.Droid'
      inputs:
        solution: 'MobCAT.Droid/MobCAT.Droid.csproj'
        configuration: '$(BuildConfiguration)'

  - job: BuildNugetMac
    pool: 
        name: Hosted macOS
        vmImage: 'macOS 10.14'
        demands:
        - MSBuild
        - Xamarin.iOS
    
    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 4.3.1'
      inputs:
        versionSpec: 4.3.1

    - task: NuGetCommand@2
      displayName: 'NuGet restore MobCAT'
      inputs:
        restoreSolution: 'MobCAT/MobCAT.csproj'

    - task: NuGetCommand@2
      displayName: 'NuGet restore MobCAT.iOS'
      inputs:
        restoreSolution: 'MobCAT.iOS/MobCAT.iOS.csproj'

    - task: MSBuild@1
      displayName: 'Build MobCAT'
      inputs:
        solution: 'MobCAT/MobCAT.csproj'
        configuration: '$(BuildConfiguration)'
    
    - task: MSBuild@1
      displayName: 'Build MobCAT'
      inputs:
        solution: 'MobCAT.iOS/MobCAT.iOS.csproj'
        configuration: '$(BuildConfiguration)'

- stage: PackNugets
  jobs:
  - job: PackNugets
    pool:
        name: Hosted VS2017
        demans: msbuild

    steps:
    - script: echo PackNuget the code!

    - task: Bash@3
      displayName: 'Version Script'
      inputs:
        targetType: 'inline'
        script: |
          echo '$(Build_BuildID)' $BUILD_BUILDID
                  BUILDNUMBER=$BUILD_BUILDID
                  VERSION=1.0.$BUILDNUMBER
                  echo 'VERSION ' $VERSION
                  
                  #if ! [ $BRANCH = master ]; then
                  #   VERSION=1.0.$BUILDNUMBER
                  #    echo "##vso[build.updatebuildnumber]$VERSION"
                  #fi;
                  
                  echo "##vso[task.setvariable variable=Version]$VERSION"

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack  MobCAT'
      inputs:
        command: pack
        packagesToPack: 'MobCAT/MobCAT.csproj'
        versioningScheme: byEnvVar
        versionEnvVar: VERSION

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack  MobCAT.Forms'
      inputs:
        command: pack
        packagesToPack: 'MobCAT.Forms/MobCAT.Forms.csproj'
        versioningScheme: byEnvVar
        versionEnvVar: VERSION

    - task: NuGetCommand@2
      displayName: 'NuGet pack  MobCAT.Droid'
      inputs:
        command: pack
        packagesToPack: 'MobCAT.Droid/MobCAT.Droid.csproj'
        versioningScheme: byEnvVar
        versionEnvVar: VERSION

    - task: NuGetCommand@2
      displayName: 'NuGet pack  MobCAT.iOS'
      inputs:
        command: pack
        packagesToPack: 'MobCAT.iOS/MobCAT.iOS.csproj'
        versioningScheme: byEnvVar
        versionEnvVar: VERSION

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**\*.nupkg'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop_nuget'
        publishLocation: 'Container'

- stage: PublishNuget
  jobs:
  - job: PublishNuget
    pool:
        name: Hosted VS2017
        demans: msbuild

    steps:
    - script: echo Publish Nuget Github the code!
    - script: echo 'VERSION ' $VERSION

    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop_nuget'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: GitHubRelease@0
      inputs:
        gitHubConnection: 'GitHub connection 6'
        repositoryName: 'xamcat/mobcat-library'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'manual'
        tag: 'v$VERSION'
        title: 'v$VERSION'
        releaseNotesSource: 'input'
        releaseNotes: 'Test Release Notes'
        assets: '$(System.ArtifactsDirectory)/**/drop_nuget/*.nupkg'
        isDraft: true